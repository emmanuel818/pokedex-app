let pokemonRepository = (function() {
  let e = [],
    t = 'https://pokeapi.co/api/v2/pokemon/?limit=152',
    n = document.querySelector('#search-bar');
  function o(t) {
    'object' == typeof t && 'name' in t && 'detailsUrl' in t
      ? e.push(t)
      : alert('Pokemon is not correct');
  }
  function i(e) {
    let t = e.detailsUrl;
    return fetch(t)
      .then(function(e) {
        return e.json();
      })
      .then(function(t) {
        (e.imageUrl = t.sprites.front_default),
          (e.height = t.height),
          (e.weight = t.weight),
          (e.types = t.types);
      })
      .catch(function(e) {
        console.error(e);
      });
  }
  function r(e) {
    let t = document.querySelector('.modal-body'),
      n = document.querySelector('.modal-title');
    (t.innerText = ''), (n.innerText = '');
    let o = document.createElement('h1');
    o.innerText = e.name;
    let i = document.createElement('img');
    i.src = e.imageUrl;
    let r = document.createElement('p');
    r.innerText = 'Height: ' + e.height;
    let l = document.createElement('p');
    l.innerText = 'Weight: ' + e.weight;
    let c = document.createElement('p');
    (c.innerText = e.types.map(e => e.type.name)),
      n.append(o),
      t.append(i),
      t.append(r),
      t.append(l),
      t.append(c);
  }
  return (
    n.addEventListener('input', function() {
      let e = document.querySelectorAll('li'),
        t = n.value.toUpperCase();
      e.forEach(function(e) {
        e.innerText.toUpperCase().indexOf(t) < 0 && (e.style.display = 'none');
      });
    }),
    {
      add: o,
      getAll: function() {
        return e;
      },
      addListItem: function(e) {
        let t = document.querySelector('.list-group'),
          n = document.createElement('li');
        n.classList.add('group-list-item');
        let o = document.createElement('button');
        (o.innerText = e.name),
          o.classList.add('button'),
          (o.dataset.target = '#pokedexModal'),
          (o.dataset.toggle = 'modal'),
          n.appendChild(o),
          t.appendChild(n),
          (function(e, t) {
            e.addEventListener('click', function() {
              !(function(e) {
                i(e).then(function() {
                  r(e);
                });
              })(t);
            });
          })(o, e);
      },
      loadList: function() {
        return fetch(t)
          .then(function(e) {
            return e.json();
          })
          .then(function(e) {
            e.results.forEach(function(e) {
              o({ name: e.name, detailsUrl: e.url });
            });
          })
          .catch(function(e) {
            console.error(e);
          });
      },
      loadDetails: i,
      showModal: r
    }
  );
})();
pokemonRepository.loadList().then(function() {
  pokemonRepository.getAll().forEach(function(e) {
    pokemonRepository.addListItem(e);
  });
});
